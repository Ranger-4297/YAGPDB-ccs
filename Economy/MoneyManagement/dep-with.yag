{{/*
		Made by ranger_4297 (765316548516380732)

	Trigger Type: `Regex`
	Trigger: `(dep(osit)?|with(draw)?)`

	©️ RhykerWells 2020-Present
	GNU, GPLV3 License
	Repository: https://github.com/Ranger-4297/YAGPDB-ccs
*/}}


{{/* Only edit below if you know what you're doing (: rawr */}}

{{$trigger := print `\A(?:\` .ServerPrefix `|<@!?` .BotUser.ID `>\*)` .CCTrigger}}
{{if not (reFind $trigger .Message.Content)}}
	{{return}}
{{end}}

{{/* Initiates variables */}}
{{$userID := .User.ID}}
{{$successColor := 0x00ff7b}}
{{$errorColor := 0xFF0000}}
{{$prefix := .ServerPrefix}}

{{/* Deposit, Withdraw */}}

{{/* Response */}}
{{$embed := sdict "author" (sdict "name" .User.Username "icon_url" (.User.AvatarURL "1024")) "timestamp" currentTime "color" $errorColor}}
{{$economySettings := (dbGet 0 "EconomySettings").Value}}
{{if not $economySettings}}
	{{$embed.Set "description" (print "No `Settings` database found.\nPlease set it up with the default values using `" .ServerPrefix "server-set default`")}}
	{{sendMessage nil (cembed $embed)}}
	{{return}}
{{end}}
{{$symbol := $economySettings.symbol}}
{{$bankDB := or (dbGet 0 "bank").Value sdict}}
{{$bankUser := or ($bankDB.Get (toString $userID)) 0 | toInt}}
{{$cash := or (dbGet $userID "cash").Value 0 | toInt}}
{{if (reFind `dep(osit)?` .Cmd)}}
	{{if not .CmdArgs}}
		{{$embed.Set "description" (print "No `Amount` argument provided.\nSyntax is `" .Cmd " <Amount:Amount>`")}}
		{{sendMessage nil (cembed $embed)}}
		{{return}}
	{{end}}
	{{$amount := index .CmdArgs 0}}
	{{if not (or (toInt $amount) (eq $amount "all"))}}
		{{$embed.Set "description" (print "Invalid `Amount` argument provided.\nSyntax is `" .Cmd " <Amount:Amount>`")}}
		{{sendMessage nil (cembed $embed)}}
		{{return}}
	{{end}}
	{{if eq $amount "all"}}{{$amount = $cash}}{{else}}{{$amount = toInt $amount}}{{end}}
	{{if gt $amount $cash}}
		{{$embed.Set "description" (print "You're unable to deposit more than you have on hand.\nYou currently have " $symbol (humanizeThousands $cash) " on you.")}}
		{{sendMessage nil (cembed $embed)}}
		{{return}}
	{{end}}
	{{if lt $cash 0}}
		{{$embed.Set "description" (print "You're unable to deposit your overdraft.")}}
		{{sendMessage nil (cembed $embed)}}
		{{return}}
	{{end}}
	{{$embed.Set "description" (print "You deposited " $symbol (humanizeThousands $amount) " into your bank!")}}
	{{$embed.Set "color" $successColor}}
	{{$cash = sub $cash $amount}}
	{{$bankUser = add $bankUser $amount}}
{{else if (reFind `with(draw)?` .Cmd)}}
	{{if not .CmdArgs}}
		{{$embed.Set "description" (print "No `Amount` argument provided.\nSyntax is `" .Cmd " <Amount:Amount>`")}}
		{{sendMessage nil (cembed $embed)}}
		{{return}}
	{{end}}
	{{$amount := index .CmdArgs 0}}
	{{if not (or (toInt $amount) (eq $amount "all"))}}
		{{$embed.Set "description" (print "Invalid `Amount` argument provided.\nSyntax is `" .Cmd " <Amount:Amount>`")}}
		{{sendMessage nil (cembed $embed)}}
		{{return}}
	{{end}}
	{{if eq $amount "all"}}{{$amount = $bankUser}}{{else}}{{$amount = toInt $amount}}{{end}}
	{{if gt $amount $bankUser}}
		{{$embed.Set "description" (print "You're unable to withdraw more than you have in your bank.\nYou currently have " $symbol (humanizeThousands $bankUser) " in your bank.")}}
		{{sendMessage nil (cembed $embed)}}
		{{return}}
	{{end}}
	{{if lt $amount 0}}
		{{$embed.Set "description" (print "You're unable to withdraw less than nothing.")}}
		{{sendMessage nil (cembed $embed)}}
		{{return}}
	{{end}}
	{{$embed.Set "description" (print "You withdrew " $symbol (humanizeThousands $amount) " from your bank!")}}
	{{$embed.Set "color" $successColor}}
	{{$cash = add $cash $amount}}
	{{$bankUser = sub $bankUser $amount}}
{{end}}
{{$bankDB.Set (toString $userID) $bankUser}}
{{dbSet 0 "bank" $bankDB}}
{{dbSet $userID "cash" $cash}}
{{sendMessage nil (cembed $embed)}}