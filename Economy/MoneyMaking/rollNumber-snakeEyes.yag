{{/*
		Made by ranger_4297 (765316548516380732)

	Trigger Type: `Regex`
	Trigger: `\A(-|<@!?204255221017214977>\s*)(rollnum(ber)?|rn|snake-?eyes)(\s+|\z)`

	©️ RhykerWells 2020-Present
	GNU, GPLV3 License
	Repository: https://github.com/Ranger-4297/YAGPDB-ccs
*/}}


{{/* Only edit below if you know what you're doing (: rawr */}}

{{/* Initiates variables */}}
{{$userID := .User.ID}}
{{$successColor := 0x00ff7b}}
{{$errorColor := 0xFF0000}}
{{$prefix := .ServerPrefix}}

{{/* Roll, SnakeEyes */}}

{{/* Response */}}
{{$embed := sdict "author" (sdict "name" .User.Username "icon_url" (.User.AvatarURL "1024")) "timestamp" currentTime "color" $errorColor}}
{{$economySettings := (dbGet 0 "EconomySettings").Value}}
{{if not $economySettings}}
	{{$embed.Set "description" (print "No `Settings` database found.\nPlease set it up with the default values using `" .ServerPrefix "server-set default`")}}
	{{sendMessage nil (cembed $embed)}}
	{{return}}
{{end}}
{{$symbol := $economySettings.symbol}}
{{$betMax := $economySettings.betMax | toInt}}
{{$incomeCooldown := $economySettings.incomeCooldown | toInt}}
{{if not .CmdArgs}}
	{{$embed.Set "description" (print "No `bet` argument provided.\nSyntax is `" .Cmd " <Bet:Amount>`")}}
	{{sendMessage nil (cembed $embed)}}
	{{return}}
{{end}}
{{$bal := toInt (dbGet $userID "cash").Value}}
{{$bet := index .CmdArgs 0 | str | lower}}
{{if not (or (toInt $bet) (eq $bet "all" "max"))}}
	{{$embed.Set "description" (print "Invalid `Bet` argument provided.\nSyntax is `" .Cmd " <Bet:Amount>`")}}
	{{sendMessage nil (cembed $embed)}}
	{{return}}
{{end}}
{{if eq $bet "all"}}
	{{$bet = $bal}}
{{else if eq $bet "max"}}
	{{$bet = $betMax}}
{{end}}
{{if le ($bet = toInt $bet) 0}}
	{{$embed.Set "description" (print "Invalid `Bet` argument provided.\nSyntax is `" .Cmd " <Bet:Amount>`")}}
	{{sendMessage nil (cembed $embed)}}
	{{return}}
{{end}}
{{if gt $bet $bal}}
	{{$embed.Set "description" (print "You can't bet more than you have!")}}
	{{sendMessage nil (cembed $embed)}}
	{{return}}
{{end}}
{{if gt $bet $betMax}}
	{{$embed.Set "description" (print "You can't bet more than " $symbol $betMax)}}
	{{sendMessage nil (cembed $embed)}}
	{{return}}
{{end}}
{{if (reFind `rollnum(ber)?|rn` .Cmd)}}
	{{if ($cooldown := dbGet $userID "rollCooldown")}}
		{{$embed.Set "description" (print "This command is on cooldown for " (humanizeDurationSeconds ($cooldown.ExpiresAt.Sub currentTime)))}}
		{{sendMessage nil (cembed $embed)}}
		{{return}}
	{{end}}
	{{dbSetExpire $userID "rollCooldown" "cooldown" $incomeCooldown}}
	{{$roll := randInt 1 101}}
	{{$rs := 1}}
	{{if and (ge $roll 65) (lt $roll 90)}}
		{{$bal = add $bal $bet}}
	{{else if and (ge $roll 90) (lt $roll 100)}}
		{{$bet = (mult $bet 3)}}
		{{$bal = add $bal $bet}}
	{{else if eq $roll 100}}
		{{$bet = (mult $bet 5)}}
		{{$bal = add $bal $bet}}
	{{else}}
		{{$bal = sub $bal $bet}}
		{{$rs = 0}}
	{{end}}
	{{if $rs}}
		{{$embed.Set "description" (print "The roll landed on " $roll " and you won " $symbol (humanizeThousands $bet) "!")}}
		{{$embed.Set "color" $successColor}}
	{{else}}
		{{$embed.Set "description" (print "The roll landed on " $roll " and you lost " $symbol (humanizeThousands $bet))}}
		{{$embed.Set "color" $errorColor}}
	{{end}}
{{else if (reFind `snake-?eyes` .Cmd)}}
	{{if ($cooldown := dbGet $userID "snakeeyesCooldown")}}
		{{$embed.Set "description" (print "This command is on cooldown for " (humanizeDurationSeconds ($cooldown.ExpiresAt.Sub currentTime)))}}
		{{sendMessage nil (cembed $embed)}}
		{{return}}
	{{end}}
	{{dbSetExpire $userID "snakeeyesCooldown" "cooldown" $incomeCooldown}}
	{{$die1 := (randInt 1 7)}}
	{{$die2 := (randInt 1 7)}}
	{{if and (eq $die1 1) (eq $die2 1)}}
		{{$embed.Set "description" (print "You rolled snake eyes (" $die1 "&" $die2 ")\nAnd won " $symbol (humanizeThousands (mult $bet 36)))}}
		{{$embed.Set "color" $successColor}}
		{{$bal = add $bal (mult $bet 36)}}
	{{else}}
		{{$embed.Set "description" (print "You rolled " $die1 "&" $die2 " and lost " $symbol (humanizeThousands $bet) ".")}}
		{{$embed.Set "color" $errorColor}}
		{{$bal = sub $bal $bet}}
	{{end}}
{{end}}
{{dbSet .User.ID "cash" $bal}}
{{sendMessage nil (cembed $embed)}}