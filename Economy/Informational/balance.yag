{{/*
		Made by ranger_4297 (765316548516380732)

	Trigger Type: `Regex`
	Trigger: `(bal(ance)?|wallet|money)`

	¬©Ô∏è RhykerWells 2020-Present
	GNU, GPLV3 License
	Repository: https://github.com/Ranger-4297/YAGPDB-ccs
*/}}


{{/* Only edit below if you know what you're doing (: rawr */}}

{{$trigger := print `\A(?:\` .ServerPrefix `|<@!?` .BotUser.ID `>\*)` .CCTrigger}}
{{if not (reFind $trigger .Message.Content)}}
	{{return}}
{{end}}

{{/* Initiates variables */}}
{{$user := .User}}
{{$successColor := 0x00ff7b}}
{{$errorColor := 0xFF0000}}
{{$prefix := .ServerPrefix}}

{{/* Balance */}}

{{/* Response */}}
{{$embed := sdict "author" (sdict "name" .User.Username "icon_url" (.User.AvatarURL "1024")) "timestamp" currentTime}}
{{$economySettings := (dbGet 0 "EconomySettings").Value}}
{{if not $economySettings}}
	{{$embed.Set "description" (print "No `Settings` database found.\nPlease set it up with the default values using `" .ServerPrefix "server-set default`")}}
	{{sendMessage nil (cembed $embed)}}
	{{return}}
{{end}}
{{$symbol := $economySettings.symbol}}
{{with .CmdArgs}}
	{{if $newUser := (index . 0) | userArg}}
		{{$user = $newUser}}
	{{end}}
{{end}}
{{$bank := or (((dbGet 0 "bank").Value).Get (toString $user.ID)) 0 | toInt}}
{{$cash := or (dbGet $user.ID "cash").Value 0 | toInt}}
{{$net := humanizeThousands ($cash | add $bank)}}
{{$rank := ""}}
{{$pos := dict 1 "ü•á" 2 "ü•à" 3 "ü•â"}}
{{$rank = dbRank (sdict "pattern" "cash") $user.ID "cash"}}
{{if not $rank}}
	{{$rank = "None"}}
{{else}}
	{{if in (cslice 1 2 3) $rank }}
		{{$rank = $pos.Get $rank}}
	{{else}}
		{{$ord := "th"}}
		{{$cent := toInt (mod $rank 100)}}
		{{$dec := toInt (mod $rank 10)}}
		{{if not (and (ge $cent 10) (le $cent 19))}}
			{{if eq $dec 1}}{{$ord = "st"}}{{else if eq $dec 2}}{{$ord = "nd"}}{{else if eq $dec 3}}{{$ord = "rd"}}{{end}}
		{{end}}
		{{$rank = print $rank $ord "."}}
	{{end}}
{{end}}
{{$embed.Set "description" (print $user.Mention "'s balance\nLeaderboard rank: " $rank)}}
{{$embed.Set "fields" (cslice
	(sdict "name" "Cash" "value" (print $symbol (humanizeThousands $cash)) "inline" true)
	(sdict "name" "Bank" "value" (print $symbol (humanizeThousands $bank)) "inline" true)
	(sdict "name" "Networth" "value" (print $symbol $net) "inline" true)
)}}
{{$embed.Set "color" $successColor}}
{{sendMessage nil (cembed $embed)}}